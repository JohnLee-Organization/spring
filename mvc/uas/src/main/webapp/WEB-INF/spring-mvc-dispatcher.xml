<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--注解说明 -->
    <context:annotation-config/>

    <bean id="jacksonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
        <property name="dateFormat" ref="simpleDateFormat"/>
        <property name="serializationInclusion" value="NON_NULL"/>
    </bean>
    <bean id="simpleDateFormat" class="java.text.SimpleDateFormat">
        <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
    </bean>

    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven validator="validator" conversion-service="conversionService">
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prefixJson" value="false"/>
                <property name="objectMapper" ref="jacksonObjectMapper"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>text/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- Freemarker 视图解释器 -->
    <bean id="freemarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"
          p:defaultEncoding="UTF-8">
        <property name="templateLoaderPaths">
            <array>
                <value>/WEB-INF/view/</value>
                <value>/WEB-INF/freemarker/</value>
                <value>classpath:/freemarker/view/</value>
                <value>classpath:/freemarker/</value>
            </array>
        </property>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">10</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="number_format">#.##</prop>
            </props>
        </property>
    </bean>
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"
          p:contentType="text/html;charset=UTF-8"
          p:viewClass="org.springframework.web.servlet.view.freemarker.FreeMarkerView" p:exposeRequestAttributes="true"
          p:exposeSpringMacroHelpers="true" p:exposeSessionAttributes="true">
        <property name="suffix" value=".ftl"/>
    </bean>

    <!-- 国际化资源文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="useCodeAsDefaultMessage" value="true"/>
        <property name="basenames">
            <list>
                <value>i18n/messages</value>
            </list>
        </property>
    </bean>

    <!-- 项目配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="fileEncoding" value="UTF-8"/>
        <property name="locations">
            <list>
                <value>classpath*:config/configuration/custom-${RUNTIME_ENVIRONMENT}.properties</value>
            </list>
        </property>
    </bean>

    <!-- 验证器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- 自定义数据类型转换器 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="net.lizhaoweb.spring.mvc.converter.IntConverter"/>
                <bean class="net.lizhaoweb.spring.mvc.converter.DateConverter"/>
            </set>
        </property>
    </bean>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" lazy-init="false"/>-->

    <!-- 另外最好还要加入DefaultAnnotationHandlerMapping，不然会被 XML或其它的映射覆盖！
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/> -->

    <!-- servlet适配器，这里必须明确声明，因为spring默认没有初始化该适配器
    <bean id="servletHandlerAdapter" class="org.springframework.web.servlet.handler.SimpleServletHandlerAdapter"/>-->

    <!-- 文件上传解析器 Servlet 2.5 -->
    <!--  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
          <property name="defaultEncoding" value="${application.system.config.controller.upload.encoding}"/>
          <property name="maxUploadSize" value="${application.system.config.controller.upload.totalMax}"/>
          <property name="maxInMemorySize" value="${application.system.config.controller.upload.maxInMemory}"/>
      </bean>
  -->
    <!-- 文件上传解析器 Servlet 3.0
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
    -->


    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
            </props>
        </property>
    </bean>


    <!-- 自定义监听器-->
    <bean class="net.lizhaoweb.spring.mvc.uas.listener.InitListener">
        <property name="authorizationService" ref="uasAuthorizationService"/>
        <property name="roleService" ref="uasRoleService"/>
        <property name="accountService" ref="uasAccountService"/>
        <property name="roleAuthRelationService" ref="uasRoleAuthRelationService"/>
    </bean>

</beans>
